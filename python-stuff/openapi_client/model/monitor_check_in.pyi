# coding: utf-8

"""
    API Reference

    Sentry Public API  # noqa: E501

    The version of the OpenAPI document: v0
    Contact: partners@sentry.io
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class MonitorCheckIn(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "duration",
            "expectedTime",
            "environment",
            "dateCreated",
            "monitorConfig",
            "attachmentId",
            "id",
            "status",
        }
        
        class properties:
            id = schemas.StrSchema
            environment = schemas.StrSchema
            status = schemas.StrSchema
            duration = schemas.IntSchema
            dateCreated = schemas.DateTimeSchema
            attachmentId = schemas.StrSchema
            expectedTime = schemas.DateTimeSchema
            monitorConfig = schemas.AnyTypeSchema
            __annotations__ = {
                "id": id,
                "environment": environment,
                "status": status,
                "duration": duration,
                "dateCreated": dateCreated,
                "attachmentId": attachmentId,
                "expectedTime": expectedTime,
                "monitorConfig": monitorConfig,
            }
    
    duration: MetaOapg.properties.duration
    expectedTime: MetaOapg.properties.expectedTime
    environment: MetaOapg.properties.environment
    dateCreated: MetaOapg.properties.dateCreated
    monitorConfig: MetaOapg.properties.monitorConfig
    attachmentId: MetaOapg.properties.attachmentId
    id: MetaOapg.properties.id
    status: MetaOapg.properties.status
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["environment"]) -> MetaOapg.properties.environment: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["duration"]) -> MetaOapg.properties.duration: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dateCreated"]) -> MetaOapg.properties.dateCreated: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["attachmentId"]) -> MetaOapg.properties.attachmentId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["expectedTime"]) -> MetaOapg.properties.expectedTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["monitorConfig"]) -> MetaOapg.properties.monitorConfig: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "environment", "status", "duration", "dateCreated", "attachmentId", "expectedTime", "monitorConfig", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["environment"]) -> MetaOapg.properties.environment: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["duration"]) -> MetaOapg.properties.duration: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dateCreated"]) -> MetaOapg.properties.dateCreated: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["attachmentId"]) -> MetaOapg.properties.attachmentId: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["expectedTime"]) -> MetaOapg.properties.expectedTime: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["monitorConfig"]) -> MetaOapg.properties.monitorConfig: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "environment", "status", "duration", "dateCreated", "attachmentId", "expectedTime", "monitorConfig", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        duration: typing.Union[MetaOapg.properties.duration, decimal.Decimal, int, ],
        expectedTime: typing.Union[MetaOapg.properties.expectedTime, str, datetime, ],
        environment: typing.Union[MetaOapg.properties.environment, str, ],
        dateCreated: typing.Union[MetaOapg.properties.dateCreated, str, datetime, ],
        monitorConfig: typing.Union[MetaOapg.properties.monitorConfig, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
        attachmentId: typing.Union[MetaOapg.properties.attachmentId, str, ],
        id: typing.Union[MetaOapg.properties.id, str, ],
        status: typing.Union[MetaOapg.properties.status, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'MonitorCheckIn':
        return super().__new__(
            cls,
            *_args,
            duration=duration,
            expectedTime=expectedTime,
            environment=environment,
            dateCreated=dateCreated,
            monitorConfig=monitorConfig,
            attachmentId=attachmentId,
            id=id,
            status=status,
            _configuration=_configuration,
            **kwargs,
        )
